{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liadg\\\\Downloads\\\\Chat-App-BackGammon-main\\\\Chat-App-BackGammon-main\\\\frontend\\\\src\\\\components\\\\gameComponents\\\\Triangle\\\\Triangle.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./Triangle.css\";\nimport React, { useEffect, useState } from 'react';\nimport GamePiece from \"../GamePiece/GamePiece\";\nimport { useDrop } from \"react-dnd\";\nimport { movePiece } from \"../../../services/gameService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Triangle(_ref) {\n  _s();\n\n  let {\n    socket,\n    updateBoard,\n    place,\n    isTop,\n    pieces,\n    colorOfTheUser,\n    isMyTurn\n  } = _ref;\n  const [piecesArr, setPiecesArr] = useState([]);\n  useEffect(() => {\n    setPiecesArr(pieces);\n  }, []);\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: \"div\",\n    drop: item => {\n      addPiece(item);\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  }));\n\n  const addPiece = item => {\n    movePiece(item.id, place, true);\n    updateBoard();\n    socket.current.emit(\"movePiece\", localStorage.getItem(\"roomName\"), item.id, place, isMyTurn);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"column\",\n    ref: drop,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `pieces ${isTop ? \"top\" : \"bottom\"}`,\n      children: piecesArr.map(piece => {\n        return /*#__PURE__*/_jsxDEV(GamePiece, {\n          isMyTurn: isMyTurn,\n          colorOfTheUser: colorOfTheUser,\n          piece: piece\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isTop ? \"triangleTop\" : \"triangleBottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Triangle, \"xo59EU4pFmfTr06wA7W3MenCFw0=\", false, function () {\n  return [useDrop];\n});\n\n_c = Triangle;\nexport default Triangle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Triangle\");","map":{"version":3,"sources":["C:/Users/liadg/Downloads/Chat-App-BackGammon-main/Chat-App-BackGammon-main/frontend/src/components/gameComponents/Triangle/Triangle.jsx"],"names":["React","useEffect","useState","GamePiece","useDrop","movePiece","Triangle","socket","updateBoard","place","isTop","pieces","colorOfTheUser","isMyTurn","piecesArr","setPiecesArr","isOver","drop","accept","item","addPiece","collect","monitor","id","current","emit","localStorage","getItem","map","piece"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,SAAT,QAA0B,+BAA1B;;;AAEA,SAASC,QAAT,OAA2F;AAAA;;AAAA,MAAzE;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,WAAV;AAAuBC,IAAAA,KAAvB;AAA8BC,IAAAA,KAA9B;AAAqCC,IAAAA,MAArC;AAA6CC,IAAAA,cAA7C;AAA6DC,IAAAA;AAA7D,GAAyE;AAEvF,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,YAAY,CAACJ,MAAD,CAAZ;AAEH,GAHQ,EAGN,EAHM,CAAT;AAKA,QAAM,CAAC;AAAEK,IAAAA;AAAF,GAAD,EAAaC,IAAb,IAAqBb,OAAO,CAAC,OAAO;AACtCc,IAAAA,MAAM,EAAE,KAD8B;AAEtCD,IAAAA,IAAI,EAAGE,IAAD,IAAU;AACZC,MAAAA,QAAQ,CAACD,IAAD,CAAR;AACH,KAJqC;AAKtCE,IAAAA,OAAO,EAAGC,OAAD,KAAc;AACnBN,MAAAA,MAAM,EAAE,CAAC,CAACM,OAAO,CAACN,MAAR;AADS,KAAd;AAL6B,GAAP,CAAD,CAAlC;;AAUA,QAAMI,QAAQ,GAAID,IAAD,IAAU;AACvBd,IAAAA,SAAS,CAACc,IAAI,CAACI,EAAN,EAAUd,KAAV,EAAiB,IAAjB,CAAT;AACAD,IAAAA,WAAW;AACXD,IAAAA,MAAM,CAACiB,OAAP,CAAeC,IAAf,CAAoB,WAApB,EAAiCC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAjC,EAAmER,IAAI,CAACI,EAAxE,EAA4Ed,KAA5E,EAAmFI,QAAnF;AACH,GAJD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,GAAG,EAAEI,IAA7B;AAAA,4BACI;AAAK,MAAA,SAAS,EAAG,UAASP,KAAK,GAAC,KAAD,GAAO,QAAS,EAA/C;AAAA,gBACKI,SAAS,CAACc,GAAV,CAAeC,KAAD,IAAW;AAEtB,4BAAO,QAAC,SAAD;AAAY,UAAA,QAAQ,EAAEhB,QAAtB;AAAgC,UAAA,cAAc,EAAED,cAAhD;AAAgE,UAAA,KAAK,EAAEiB;AAAvE;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAHA;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAK,MAAA,SAAS,EAAEnB,KAAK,GAAG,aAAH,GAAmB;AAAxC;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAtCQJ,Q;UASsBF,O;;;KATtBE,Q;AAwCT,eAAeA,QAAf","sourcesContent":["import \"./Triangle.css\";\r\nimport React, { useEffect, useState } from 'react'\r\nimport GamePiece from \"../GamePiece/GamePiece\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport { movePiece } from \"../../../services/gameService\";\r\n\r\nfunction Triangle({ socket, updateBoard, place, isTop, pieces, colorOfTheUser, isMyTurn }) {\r\n\r\n    const [piecesArr, setPiecesArr] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setPiecesArr(pieces);\r\n\r\n    }, [])\r\n\r\n    const [{ isOver }, drop] = useDrop(() => ({\r\n        accept: \"div\",\r\n        drop: (item) => {\r\n            addPiece(item);\r\n        },\r\n        collect: (monitor) => ({\r\n            isOver: !!monitor.isOver(),\r\n        }),\r\n\r\n    }));\r\n    const addPiece = (item) => {\r\n        movePiece(item.id, place, true);\r\n        updateBoard();\r\n        socket.current.emit(\"movePiece\", localStorage.getItem(\"roomName\"), item.id, place, isMyTurn);\r\n    }\r\n    return (\r\n        <div className=\"column\" ref={drop}>\r\n            <div className={`pieces ${isTop?\"top\":\"bottom\"}`} >\r\n                {piecesArr.map((piece) => {\r\n\r\n                    return <GamePiece  isMyTurn={isMyTurn} colorOfTheUser={colorOfTheUser} piece={piece} />\r\n                })}\r\n            </div>\r\n            <div className={isTop ? \"triangleTop\" : \"triangleBottom\"}>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Triangle\r\n"]},"metadata":{},"sourceType":"module"}