{"ast":null,"code":"const gameBoard = [{\n  place: 12,\n  pieces: [{\n    color: \"white\",\n    id: 2\n  }, {\n    color: \"white\",\n    id: 4\n  }, {\n    color: \"white\",\n    id: 6\n  }, {\n    color: \"white\",\n    id: 8\n  }, {\n    color: \"white\",\n    id: 10\n  }]\n}, {\n  place: 11,\n  pieces: []\n}, {\n  place: 10,\n  pieces: []\n}, {\n  place: 9,\n  pieces: []\n}, {\n  place: 8,\n  pieces: [{\n    color: \"black\",\n    id: 1\n  }, {\n    color: \"black\",\n    id: 3\n  }, {\n    color: \"black\",\n    id: 5\n  }]\n}, {\n  place: 7,\n  pieces: []\n}, {\n  place: 6,\n  pieces: [{\n    color: \"black\",\n    id: 7\n  }, {\n    color: \"black\",\n    id: 9\n  }, {\n    color: \"black\",\n    id: 11\n  }, {\n    color: \"black\",\n    id: 13\n  }, {\n    color: \"black\",\n    id: 15\n  }]\n}, {\n  place: 5,\n  pieces: []\n}, {\n  place: 4,\n  pieces: []\n}, {\n  place: 3,\n  pieces: []\n}, {\n  place: 2,\n  pieces: []\n}, {\n  place: 1,\n  pieces: [{\n    color: \"white\",\n    id: 12\n  }, {\n    color: \"white\",\n    id: 14\n  }]\n}, {\n  place: 13,\n  pieces: [{\n    color: \"black\",\n    id: 17\n  }, {\n    color: \"black\",\n    id: 19\n  }, {\n    color: \"black\",\n    id: 21\n  }, {\n    color: \"black\",\n    id: 23\n  }, {\n    color: \"black\",\n    id: 25\n  }]\n}, {\n  place: 14,\n  pieces: []\n}, {\n  place: 15,\n  pieces: []\n}, {\n  place: 16,\n  pieces: []\n}, {\n  place: 17,\n  pieces: [{\n    color: \"white\",\n    id: 16\n  }, {\n    color: \"white\",\n    id: 18\n  }, {\n    color: \"white\",\n    id: 20\n  }]\n}, {\n  place: 18,\n  pieces: []\n}, {\n  place: 19,\n  pieces: [{\n    color: \"white\",\n    id: 22\n  }, {\n    color: \"white\",\n    id: 24\n  }, {\n    color: \"white\",\n    id: 26\n  }, {\n    color: \"white\",\n    id: 28\n  }, {\n    color: \"white\",\n    id: 30\n  }]\n}, {\n  place: 20,\n  pieces: []\n}, {\n  place: 21,\n  pieces: []\n}, {\n  place: 22,\n  pieces: []\n}, {\n  place: 23,\n  pieces: []\n}, {\n  place: 24,\n  pieces: [{\n    color: \"black\",\n    id: 27\n  }, {\n    color: \"black\",\n    id: 29\n  }]\n}];\nconst gameBoardMock = [{\n  place: 12,\n  pieces: [{\n    color: \"white\",\n    id: 2\n  }, {\n    color: \"white\",\n    id: 4\n  }, {\n    color: \"white\",\n    id: 6\n  }, {\n    color: \"white\",\n    id: 8\n  }, {\n    color: \"white\",\n    id: 10\n  }]\n}, {\n  place: 11,\n  pieces: []\n}, {\n  place: 10,\n  pieces: []\n}, {\n  place: 9,\n  pieces: []\n}, {\n  place: 8,\n  pieces: []\n}, {\n  place: 7,\n  pieces: [{\n    color: \"black\",\n    id: 7\n  }]\n}, {\n  place: 6,\n  pieces: [{\n    color: \"black\",\n    id: 9\n  }, {\n    color: \"black\",\n    id: 11\n  }, {\n    color: \"black\",\n    id: 13\n  }, {\n    color: \"black\",\n    id: 15\n  }]\n}, {\n  place: 5,\n  pieces: []\n}, {\n  place: 4,\n  pieces: []\n}, {\n  place: 3,\n  pieces: [{\n    color: \"black\",\n    id: 1\n  }, {\n    color: \"black\",\n    id: 3\n  }, {\n    color: \"black\",\n    id: 5\n  }]\n}, {\n  place: 2,\n  pieces: [{\n    color: \"black\",\n    id: 17\n  }, {\n    color: \"black\",\n    id: 19\n  }, {\n    color: \"black\",\n    id: 21\n  }, {\n    color: \"black\",\n    id: 23\n  }, {\n    color: \"black\",\n    id: 25\n  }]\n}, {\n  place: 1,\n  pieces: [{\n    color: \"black\",\n    id: 27\n  }, {\n    color: \"black\",\n    id: 29\n  }]\n}, {\n  place: 13,\n  pieces: []\n}, {\n  place: 14,\n  pieces: []\n}, {\n  place: 15,\n  pieces: []\n}, {\n  place: 16,\n  pieces: [{\n    color: \"white\",\n    id: 12\n  }, {\n    color: \"white\",\n    id: 14\n  }]\n}, {\n  place: 17,\n  pieces: [{\n    color: \"white\",\n    id: 16\n  }, {\n    color: \"white\",\n    id: 18\n  }, {\n    color: \"white\",\n    id: 20\n  }]\n}, {\n  place: 18,\n  pieces: []\n}, {\n  place: 19,\n  pieces: [{\n    color: \"white\",\n    id: 22\n  }, {\n    color: \"white\",\n    id: 24\n  }, {\n    color: \"white\",\n    id: 26\n  }, {\n    color: \"white\",\n    id: 28\n  }, {\n    color: \"white\",\n    id: 30\n  }]\n}, {\n  place: 20,\n  pieces: []\n}, {\n  place: 21,\n  pieces: []\n}, {\n  place: 22,\n  pieces: []\n}, {\n  place: 23,\n  pieces: []\n}, {\n  place: 24,\n  pieces: []\n}];\nconst whitePiecesBox = [];\nconst blackPiecesBox = [];\nconst jail = {\n  pieces: []\n};\nexport const addPieceToBox = movedPiece => {\n  const dieValue1 = localStorage.getItem(\"value1\");\n  const dieValue2 = localStorage.getItem(\"value2\");\n  const dieValue3 = localStorage.getItem(\"value3\");\n  const dieValue4 = localStorage.getItem(\"value4\");\n  const oldPlaceIndex = gameBoard.findIndex(row => row.pieces.find(piece => piece.id === movedPiece.id));\n\n  if (movedPiece.color == \"white\") {\n    if (canPlayerDropToBox(movedPiece.color)) {\n      if (isRemovePieceEligible(dieValue1, dieValue2, dieValue3, dieValue4, oldPlaceIndex, 24)) {\n        var _gameBoard$oldPlaceIn;\n\n        gameBoard[oldPlaceIndex].pieces = (_gameBoard$oldPlaceIn = gameBoard[oldPlaceIndex].pieces) === null || _gameBoard$oldPlaceIn === void 0 ? void 0 : _gameBoard$oldPlaceIn.filter(piece => piece.id !== movedPiece.id);\n        whitePiecesBox.push(movedPiece);\n      }\n    }\n  }\n\n  if (movedPiece.color == \"black\") {\n    if (canPlayerDropToBox(movedPiece.color)) {\n      if (isRemovePieceEligible(dieValue1, dieValue2, dieValue3, dieValue4, oldPlaceIndex, 12)) {\n        var _gameBoard$oldPlaceIn2;\n\n        gameBoard[oldPlaceIndex].pieces = (_gameBoard$oldPlaceIn2 = gameBoard[oldPlaceIndex].pieces) === null || _gameBoard$oldPlaceIn2 === void 0 ? void 0 : _gameBoard$oldPlaceIn2.filter(piece => piece.id !== movedPiece.id);\n        blackPiecesBox.push(movedPiece);\n      }\n    }\n  }\n};\n\nconst isRemovePieceEligible = (dieValue1, dieValue2, dieValue3, dieValue4, oldPlaceIndex, gameNumber) => {\n  const oldPlace = gameNumber - oldPlaceIndex;\n\n  if (dieValue1 >= oldPlace) {\n    localStorage.removeItem(\"value1\");\n    return true;\n  } else if (dieValue2 >= oldPlace) {\n    localStorage.removeItem(\"value2\");\n    return true;\n  } else if (dieValue3 >= oldPlace) {\n    localStorage.removeItem(\"value3\");\n    return true;\n  } else if (dieValue4 >= oldPlace) {\n    localStorage.removeItem(\"value4\");\n    return true;\n  }\n\n  return false;\n};\n\nconst canPlayerDropToBox = color => {\n  if (color == \"white\") {\n    for (let index = 0; index < 18; index++) {\n      var _gameBoard$index$piec;\n\n      if (((_gameBoard$index$piec = gameBoard[index].pieces[0]) === null || _gameBoard$index$piec === void 0 ? void 0 : _gameBoard$index$piec.color) === color) {\n        return false;\n      }\n    }\n  } else {\n    for (let index = 0; index < 6; index++) {\n      var _gameBoard$index$piec2;\n\n      if (((_gameBoard$index$piec2 = gameBoard[index].pieces[0]) === null || _gameBoard$index$piec2 === void 0 ? void 0 : _gameBoard$index$piec2.color) === color) {\n        return false;\n      }\n    }\n\n    for (let index = 12; index < 24; index++) {\n      var _gameBoard$index$piec3;\n\n      if (((_gameBoard$index$piec3 = gameBoard[index].pieces[0]) === null || _gameBoard$index$piec3 === void 0 ? void 0 : _gameBoard$index$piec3.color) === color) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n};\n\nconst hasPieceinJail = color => {\n  if (jail.pieces.length === 0) return false;\n\n  for (let index = 0; index < jail.pieces.length; index++) {\n    if (jail.pieces[index].color === color) return true;\n  }\n\n  return false;\n};\n\nexport const movePiece = (movedPiece, newPlace, myTurn) => {\n  var _gameBoard$oldPlaceIn3;\n\n  if (!myTurn) return;\n  const newPlaceIndex = gameBoard.findIndex(row => row.place === newPlace);\n  const dieValue1 = localStorage.getItem(\"value1\");\n  const dieValue2 = localStorage.getItem(\"value2\");\n  const dieValue3 = localStorage.getItem(\"value3\");\n  const dieValue4 = localStorage.getItem(\"value4\");\n  console.log(\"whayyy\");\n\n  if (isPieceInJail(movedPiece)) {\n    console.log(\"ispieceinjail\");\n\n    if (noMorethanOneOpp(newPlaceIndex, movedPiece)) {\n      console.log(\"nomorethanone\");\n\n      if (moveMatchDiceValuesOfJail(dieValue1, dieValue2, dieValue3, dieValue4, newPlace, movedPiece)) {\n        console.log(\"mobemathcdicebalue\");\n        jail.pieces = jail.pieces.filter(piece => piece.id !== movedPiece.id);\n        gameBoard[newPlaceIndex].pieces.push(movedPiece);\n        return;\n      }\n    }\n\n    if (isMoveEating(newPlaceIndex, movedPiece)) {\n      if (moveMatchDiceValuesOfJail(dieValue1, dieValue2, dieValue3, dieValue4, newPlace, movedPiece)) {\n        jail.pieces.push(gameBoard[newPlaceIndex].pieces.pop());\n        jail.pieces = jail.pieces.filter(piece => piece.id !== movedPiece.id);\n        gameBoard[newPlaceIndex].pieces.push(movedPiece);\n        return;\n      }\n    }\n\n    return;\n  }\n\n  if (isPieceInJail(movedPiece)) return;\n  if (hasPieceinJail(movedPiece.color)) return;\n  const oldPlaceIndex = gameBoard.findIndex(row => row.pieces.find(piece => piece.id === movedPiece.id));\n  const oldPlace = (_gameBoard$oldPlaceIn3 = gameBoard[oldPlaceIndex]) === null || _gameBoard$oldPlaceIn3 === void 0 ? void 0 : _gameBoard$oldPlaceIn3.place;\n\n  if (isMoveValid(newPlaceIndex, newPlace, movedPiece, dieValue1, dieValue2, dieValue3, dieValue4, oldPlace)) {\n    gameBoard[oldPlaceIndex].pieces = gameBoard[oldPlaceIndex].pieces.filter(piece => piece.id !== movedPiece.id);\n    gameBoard[newPlaceIndex].pieces.push(movedPiece);\n  } else if (isMoveEating(newPlaceIndex, movedPiece)) {\n    if (moveMatchDiceValue(dieValue1, dieValue2, dieValue3, dieValue4, oldPlace, newPlace)) {\n      jail.pieces.push(gameBoard[newPlaceIndex].pieces[0]);\n      gameBoard[newPlaceIndex].pieces.pop();\n      gameBoard[oldPlaceIndex].pieces = gameBoard[oldPlaceIndex].pieces.filter(piece => piece.id !== movedPiece.id);\n      gameBoard[newPlaceIndex].pieces.push(movedPiece);\n    }\n  }\n};\n\nconst moveMatchDiceValuesOfJail = (dieValue1, dieValue2, dieValue3, dieValue4, newPlace, movedPiece) => {\n  if (movedPiece.color == \"white\") {\n    if (newPlace == dieValue2 || newPlace == dieValue1 || newPlace == dieValue3 || newPlace == dieValue4) {\n      removeDieValueFromStorage(dieValue1, dieValue2, dieValue3, dieValue4, newPlace);\n      return true;\n    }\n  }\n\n  if (movedPiece.color == \"black\") {\n    if (newPlace == 25 - dieValue2 || newPlace == 25 - dieValue1 || newPlace == 25 - dieValue3 || newPlace == 25 - dieValue4) {\n      removeDieValueFromStorage(dieValue1, dieValue2, dieValue3, dieValue4, 25 - newPlace);\n      return true;\n    }\n  }\n\n  return false;\n};\n\nconst isPieceInJail = movedPiece => {\n  for (let index = 0; index < jail.pieces.length; index++) {\n    if (jail.pieces[index].id === movedPiece.id) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nconst isMoveEating = (newPlaceIndex, movedPiece) => {\n  var _gameBoard$newPlaceIn;\n\n  if (gameBoard[newPlaceIndex].pieces.length === 1 && ((_gameBoard$newPlaceIn = gameBoard[newPlaceIndex].pieces[0]) === null || _gameBoard$newPlaceIn === void 0 ? void 0 : _gameBoard$newPlaceIn.color) != movedPiece.color) {\n    return true;\n  }\n\n  return false;\n};\n\nconst isMoveValid = (newPlaceIndex, newPlace, movedPiece, dieValue1, dieValue2, dieValue3, dieValue4, oldPlace) => {\n  const isNoMoreThanOneOpp = noMorethanOneOpp(newPlaceIndex, movedPiece);\n  const isMoveMatchDiceValue = moveMatchDiceValue(dieValue1, dieValue2, dieValue3, dieValue4, oldPlace, newPlace);\n  return isNoMoreThanOneOpp && isMoveMatchDiceValue;\n};\n\nconst removeDieValueFromStorage = (dieValue1, dieValue2, dieValue3, dieValue4, diff) => {\n  if (dieValue1 == diff) localStorage.removeItem(\"value1\");else if (dieValue2 == diff) localStorage.removeItem(\"value2\");else if (dieValue3 == diff) localStorage.removeItem(\"value3\");else if (dieValue4 == diff) localStorage.removeItem(\"value4\");\n};\n\nconst moveMatchDiceValue = (dieValue1, dieValue2, dieValue3, dieValue4, oldPlace, newPlace) => {\n  const diff = Math.abs(newPlace - oldPlace);\n\n  if (diff == dieValue2 || diff == dieValue1 || diff == dieValue3 || diff == dieValue4) {\n    removeDieValueFromStorage(dieValue1, dieValue2, dieValue3, dieValue4, diff);\n    return true;\n  }\n\n  return false;\n};\n\nconst noMorethanOneOpp = (newPlaceIndex, movedPiece) => {\n  var _gameBoard$newPlaceIn2;\n\n  if (gameBoard[newPlaceIndex].pieces.length === 0) return true;\n  return !(((_gameBoard$newPlaceIn2 = gameBoard[newPlaceIndex].pieces[0]) === null || _gameBoard$newPlaceIn2 === void 0 ? void 0 : _gameBoard$newPlaceIn2.color) !== movedPiece.color);\n};\n\nexport default {\n  gameBoard,\n  movePiece,\n  whitePiecesBox,\n  blackPiecesBox,\n  jail,\n  addPieceToBox\n};","map":{"version":3,"sources":["C:/Users/liadg/Downloads/Chat-App-BackGammon-main/Chat-App-BackGammon-main/frontend/src/services/gameService.js"],"names":["gameBoard","place","pieces","color","id","gameBoardMock","whitePiecesBox","blackPiecesBox","jail","addPieceToBox","movedPiece","dieValue1","localStorage","getItem","dieValue2","dieValue3","dieValue4","oldPlaceIndex","findIndex","row","find","piece","canPlayerDropToBox","isRemovePieceEligible","filter","push","gameNumber","oldPlace","removeItem","index","hasPieceinJail","length","movePiece","newPlace","myTurn","newPlaceIndex","console","log","isPieceInJail","noMorethanOneOpp","moveMatchDiceValuesOfJail","isMoveEating","pop","isMoveValid","moveMatchDiceValue","removeDieValueFromStorage","isNoMoreThanOneOpp","isMoveMatchDiceValue","diff","Math","abs"],"mappings":"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","sourcesContent":["\r\nconst gameBoard = [\r\n    { place: 12, pieces: [{ color: \"white\", id: 2 }, { color: \"white\", id: 4 }, { color: \"white\", id: 6 }, { color: \"white\", id: 8 }, { color: \"white\", id: 10 },] },\r\n    { place: 11, pieces: [] },\r\n    { place: 10, pieces: [] },\r\n    { place: 9, pieces: [] },\r\n    { place: 8, pieces: [{ color: \"black\", id: 1 }, { color: \"black\", id: 3 }, { color: \"black\", id: 5 }] },\r\n    { place: 7, pieces: [] },\r\n    { place: 6, pieces: [{ color: \"black\", id: 7 }, { color: \"black\", id: 9 }, { color: \"black\", id: 11 }, { color: \"black\", id: 13 }, { color: \"black\", id: 15 }] },\r\n    { place: 5, pieces: [] },\r\n    { place: 4, pieces: [] },\r\n    { place: 3, pieces: [] },\r\n    { place: 2, pieces: [] },\r\n    { place: 1, pieces: [{ color: \"white\", id: 12 }, { color: \"white\", id: 14 }] },\r\n    { place: 13, pieces: [{ color: \"black\", id: 17 }, { color: \"black\", id: 19 }, { color: \"black\", id: 21 }, { color: \"black\", id: 23 }, { color: \"black\", id: 25 }] },\r\n    { place: 14, pieces: [] },\r\n    { place: 15, pieces: [] },\r\n    { place: 16, pieces: [] },\r\n    { place: 17, pieces: [{ color: \"white\", id: 16 }, { color: \"white\", id: 18 }, { color: \"white\", id: 20 }] },\r\n    { place: 18, pieces: [] },\r\n    { place: 19, pieces: [{ color: \"white\", id: 22 }, { color: \"white\", id: 24 }, { color: \"white\", id: 26 }, { color: \"white\", id: 28 }, { color: \"white\", id: 30 }] },\r\n    { place: 20, pieces: [] },\r\n    { place: 21, pieces: [] },\r\n    { place: 22, pieces: [] },\r\n    { place: 23, pieces: [] },\r\n    { place: 24, pieces: [{ color: \"black\", id: 27 }, { color: \"black\", id: 29 }] }\r\n];\r\n\r\n\r\nconst gameBoardMock = [\r\n    { place: 12, pieces: [{ color: \"white\", id: 2 }, { color: \"white\", id: 4 }, { color: \"white\", id: 6 }, { color: \"white\", id: 8 }, { color: \"white\", id: 10 },] },\r\n    { place: 11, pieces: [] },\r\n    { place: 10, pieces: [] },\r\n    { place: 9, pieces: [] },\r\n    { place: 8, pieces: [] },\r\n    { place: 7, pieces: [{ color: \"black\", id: 7 }] },\r\n    { place: 6, pieces: [{ color: \"black\", id: 9 }, { color: \"black\", id: 11 }, { color: \"black\", id: 13 }, { color: \"black\", id: 15 }] },\r\n    { place: 5, pieces: [] },\r\n    { place: 4, pieces: [] },\r\n    { place: 3, pieces: [{ color: \"black\", id: 1 }, { color: \"black\", id: 3 }, { color: \"black\", id: 5 }] },\r\n    { place: 2, pieces: [{ color: \"black\", id: 17 }, { color: \"black\", id: 19 }, { color: \"black\", id: 21 }, { color: \"black\", id: 23 }, { color: \"black\", id: 25 }] },\r\n    { place: 1, pieces: [{ color: \"black\", id: 27 }, { color: \"black\", id: 29 }] },\r\n    { place: 13, pieces: [] },\r\n    { place: 14, pieces: [] },\r\n    { place: 15, pieces: [] },\r\n    { place: 16, pieces: [{ color: \"white\", id: 12 }, { color: \"white\", id: 14 }] },\r\n    { place: 17, pieces: [{ color: \"white\", id: 16 }, { color: \"white\", id: 18 }, { color: \"white\", id: 20 }] },\r\n    { place: 18, pieces: [] },\r\n    { place: 19, pieces: [{ color: \"white\", id: 22 }, { color: \"white\", id: 24 }, { color: \"white\", id: 26 }, { color: \"white\", id: 28 }, { color: \"white\", id: 30 }] },\r\n    { place: 20, pieces: [] },\r\n    { place: 21, pieces: [] },\r\n    { place: 22, pieces: [] },\r\n    { place: 23, pieces: [] },\r\n    { place: 24, pieces: [] }\r\n];\r\n\r\n\r\nconst whitePiecesBox = [];\r\nconst blackPiecesBox = [];\r\nconst jail = { pieces: []};\r\n\r\n\r\nexport const addPieceToBox = (movedPiece) => {\r\n    const dieValue1 = localStorage.getItem(\"value1\");\r\n    const dieValue2 = localStorage.getItem(\"value2\");\r\n    const dieValue3 = localStorage.getItem(\"value3\");\r\n    const dieValue4 = localStorage.getItem(\"value4\");\r\n    const oldPlaceIndex = gameBoard.findIndex((row) => row.pieces.find((piece) => piece.id === movedPiece.id));\r\n    if (movedPiece.color == \"white\") {\r\n        if (canPlayerDropToBox(movedPiece.color)) {\r\n            if (isRemovePieceEligible(dieValue1, dieValue2, dieValue3, dieValue4, oldPlaceIndex, 24)) {\r\n                gameBoard[oldPlaceIndex].pieces = gameBoard[oldPlaceIndex].pieces?.filter((piece) => piece.id !== movedPiece.id);\r\n                whitePiecesBox.push(movedPiece);\r\n            }\r\n        }\r\n    }\r\n    if (movedPiece.color == \"black\") {\r\n        if (canPlayerDropToBox(movedPiece.color)) {\r\n            if (isRemovePieceEligible(dieValue1, dieValue2, dieValue3, dieValue4, oldPlaceIndex, 12)) {\r\n                gameBoard[oldPlaceIndex].pieces = gameBoard[oldPlaceIndex].pieces?.filter((piece) => piece.id !== movedPiece.id);\r\n                blackPiecesBox.push(movedPiece);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst isRemovePieceEligible = (dieValue1, dieValue2, dieValue3, dieValue4, oldPlaceIndex, gameNumber) => {\r\n\r\n    const oldPlace = gameNumber - oldPlaceIndex;\r\n\r\n    if (dieValue1 >= oldPlace) {\r\n        localStorage.removeItem(\"value1\");\r\n        return true;\r\n    }\r\n    else if (dieValue2 >= oldPlace) {\r\n        localStorage.removeItem(\"value2\");\r\n        return true;\r\n    }\r\n    else if (dieValue3 >= oldPlace) {\r\n        localStorage.removeItem(\"value3\");\r\n        return true;\r\n    }\r\n    else if (dieValue4 >= oldPlace) {\r\n        localStorage.removeItem(\"value4\");\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nconst canPlayerDropToBox = (color) => {\r\n    if (color == \"white\") {\r\n        for (let index = 0; index < 18; index++) {\r\n            if (gameBoard[index].pieces[0]?.color === color) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        for (let index = 0; index < 6; index++) {\r\n            if (gameBoard[index].pieces[0]?.color === color) {\r\n                return false;\r\n            }\r\n        }\r\n        for (let index = 12; index < 24; index++) {\r\n            if (gameBoard[index].pieces[0]?.color === color) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\nconst hasPieceinJail =(color)=>{\r\n    if(jail.pieces.length === 0) return false;\r\n    for (let index = 0; index < jail.pieces.length; index++) {\r\n        if(jail.pieces[index].color===color)return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport const movePiece = (movedPiece, newPlace, myTurn) => {\r\n    if (!myTurn) return;\r\n    const newPlaceIndex = gameBoard.findIndex((row) => row.place === newPlace);\r\n    const dieValue1 = localStorage.getItem(\"value1\");\r\n    const dieValue2 = localStorage.getItem(\"value2\");\r\n    const dieValue3 = localStorage.getItem(\"value3\");\r\n    const dieValue4 = localStorage.getItem(\"value4\");\r\n    console.log(\"whayyy\");\r\n\r\n    if (isPieceInJail(movedPiece)) {\r\n        console.log(\"ispieceinjail\");\r\n        if (noMorethanOneOpp(newPlaceIndex, movedPiece)) {\r\n            console.log(\"nomorethanone\");\r\n            if (moveMatchDiceValuesOfJail(dieValue1, dieValue2, dieValue3, dieValue4, newPlace, movedPiece)) {\r\n                console.log(\"mobemathcdicebalue\");\r\n                jail.pieces = jail.pieces.filter((piece) => piece.id !== movedPiece.id);\r\n                gameBoard[newPlaceIndex].pieces.push(movedPiece);\r\n                return;\r\n            }\r\n        }\r\n        if (isMoveEating(newPlaceIndex, movedPiece)) {\r\n            if (moveMatchDiceValuesOfJail(dieValue1, dieValue2, dieValue3, dieValue4, newPlace, movedPiece)) {\r\n                jail.pieces.push(gameBoard[newPlaceIndex].pieces.pop());\r\n                jail.pieces = jail.pieces.filter((piece) => piece.id !== movedPiece.id);\r\n                gameBoard[newPlaceIndex].pieces.push(movedPiece);\r\n                return;\r\n            }\r\n        }\r\n        return;\r\n    }\r\n    if (isPieceInJail(movedPiece)) return;\r\n    if(hasPieceinJail(movedPiece.color))return;\r\n    const oldPlaceIndex = gameBoard.findIndex((row) => row.pieces.find((piece) => piece.id === movedPiece.id));\r\n    const oldPlace = gameBoard[oldPlaceIndex]?.place;\r\n    if (isMoveValid(newPlaceIndex, newPlace, movedPiece, dieValue1, dieValue2, dieValue3, dieValue4, oldPlace)) {\r\n        gameBoard[oldPlaceIndex].pieces = gameBoard[oldPlaceIndex].pieces.filter((piece) => piece.id !== movedPiece.id);\r\n        gameBoard[newPlaceIndex].pieces.push(movedPiece);\r\n    }\r\n    else if (isMoveEating(newPlaceIndex, movedPiece)) {\r\n        if (moveMatchDiceValue(dieValue1, dieValue2, dieValue3, dieValue4, oldPlace, newPlace)) {\r\n            jail.pieces.push(gameBoard[newPlaceIndex].pieces[0])\r\n            gameBoard[newPlaceIndex].pieces.pop();\r\n            gameBoard[oldPlaceIndex].pieces = gameBoard[oldPlaceIndex].pieces.filter((piece) => piece.id !== movedPiece.id);\r\n            gameBoard[newPlaceIndex].pieces.push(movedPiece);\r\n        }\r\n    }\r\n}\r\n\r\nconst moveMatchDiceValuesOfJail = (dieValue1, dieValue2, dieValue3, dieValue4, newPlace, movedPiece) => {\r\n    if (movedPiece.color == \"white\") {\r\n        if (newPlace == dieValue2 || newPlace == dieValue1 || newPlace == dieValue3 || newPlace == dieValue4) {\r\n            removeDieValueFromStorage(dieValue1, dieValue2, dieValue3, dieValue4, newPlace);\r\n            return true;\r\n        }\r\n    }\r\n    if (movedPiece.color == \"black\") {\r\n        if (newPlace == 25 - dieValue2 || newPlace == 25 - dieValue1 || newPlace == 25 - dieValue3 || newPlace == 25 - dieValue4) {\r\n            removeDieValueFromStorage(dieValue1, dieValue2, dieValue3, dieValue4, 25 - newPlace);\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nconst isPieceInJail = (movedPiece) => {\r\n    for (let index = 0; index < jail.pieces.length; index++) {\r\n        if(jail.pieces[index].id===movedPiece.id){\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nconst isMoveEating = (newPlaceIndex, movedPiece) => {\r\n    if (gameBoard[newPlaceIndex].pieces.length === 1 && gameBoard[newPlaceIndex].pieces[0]?.color != movedPiece.color) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nconst isMoveValid = (newPlaceIndex, newPlace, movedPiece, dieValue1, dieValue2, dieValue3, dieValue4, oldPlace) => {\r\n    const isNoMoreThanOneOpp = noMorethanOneOpp(newPlaceIndex, movedPiece);\r\n    const isMoveMatchDiceValue = moveMatchDiceValue(dieValue1, dieValue2, dieValue3, dieValue4, oldPlace, newPlace);\r\n\r\n    return isNoMoreThanOneOpp && isMoveMatchDiceValue;\r\n}\r\n\r\nconst removeDieValueFromStorage = (dieValue1, dieValue2, dieValue3, dieValue4, diff) => {\r\n    if (dieValue1 == diff) localStorage.removeItem(\"value1\")\r\n    else if (dieValue2 == diff) localStorage.removeItem(\"value2\")\r\n    else if (dieValue3 == diff) localStorage.removeItem(\"value3\")\r\n    else if (dieValue4 == diff) localStorage.removeItem(\"value4\")\r\n}\r\n\r\nconst moveMatchDiceValue = (dieValue1, dieValue2, dieValue3, dieValue4, oldPlace, newPlace) => {\r\n    const diff = Math.abs(newPlace - oldPlace);\r\n    if (diff == dieValue2 || diff == dieValue1 || diff == dieValue3 || diff == dieValue4) {\r\n        removeDieValueFromStorage(dieValue1, dieValue2, dieValue3, dieValue4, diff);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nconst noMorethanOneOpp = (newPlaceIndex, movedPiece) => {\r\n    if (gameBoard[newPlaceIndex].pieces.length === 0) return true;\r\n    return !(gameBoard[newPlaceIndex].pieces[0]?.color !== movedPiece.color)\r\n}\r\n\r\n\r\n\r\nexport default {\r\n    gameBoard,\r\n    movePiece,\r\n    whitePiecesBox,\r\n    blackPiecesBox,\r\n    jail,\r\n    addPieceToBox\r\n}"]},"metadata":{},"sourceType":"module"}