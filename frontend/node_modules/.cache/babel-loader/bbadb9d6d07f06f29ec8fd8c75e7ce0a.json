{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liadg\\\\Downloads\\\\Chat-App-BackGammon-main\\\\Chat-App-BackGammon-main\\\\frontend\\\\src\\\\components\\\\ChatArea\\\\ChatArea.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { FowardMessage } from '../Message/Message';\nimport \"./ChatArea.css\";\nimport { getMessages, sendNewMessage } from \"../../services/messageService\";\nimport auth from \"../../services/authService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChatArea(_ref) {\n  _s();\n\n  let {\n    friend,\n    handleSocketMessage,\n    newMessageRecieved,\n    inviteFriendToGame\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const lastMessageRef = useRef();\n  useEffect(() => {\n    const curUser = auth.getCurrentUser();\n    setCurrentUser(curUser);\n  }, []);\n  useEffect(() => {\n    setMessages([...messages, newMessageRecieved]);\n  }, [newMessageRecieved]);\n  useEffect(() => {\n    const getMessagesAsync = async () => {\n      try {\n        await getMessages(currentUser.id, friend._id).then(res => {\n          setMessages([{\n            text: \"\"\n          }, ...res.data]);\n        });\n      } catch (ex) {\n        console.log(\"failed\");\n      }\n    };\n\n    getMessagesAsync();\n  }, [friend]);\n\n  const handleSendNewMessage = async e => {\n    e.preventDefault();\n\n    if (newMessage.trim().length > 0) {\n      try {\n        const {\n          data\n        } = await sendNewMessage(currentUser.id, friend._id, newMessage);\n\n        if (messages.length === 0) {\n          setMessages(data);\n        } else {\n          setMessages([...messages, data]);\n        }\n\n        handleSocketMessage(friend._id, newMessage);\n        setNewMessage(\"\");\n      } catch (ex) {}\n    }\n  };\n\n  const handleInviteToGame = () => {\n    inviteFriendToGame(friend._id, currentUser.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatBoxTop\",\n      children: messages.length > 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: messages.map((msg, index) => {\n          const lastMessage = messages.length - 1 === index;\n          return /*#__PURE__*/_jsxDEV(FowardMessage, {\n            text: msg === null || msg === void 0 ? void 0 : msg.text,\n            own: (msg === null || msg === void 0 ? void 0 : msg.senderId) === currentUser.id,\n            sentAt: msg === null || msg === void 0 ? void 0 : msg.createdAt,\n            ref: lastMessage ? lastMessageRef : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 40\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"no messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatBoxBottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"chatMessageInput\",\n        placeholder: \"Write somthing...\",\n        onChange: e => setNewMessage(e.target.value),\n        value: newMessage,\n        onKeyPress: event => event.key === \"Enter\" && handleSendNewMessage(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chatSubmitButton\",\n        onClick: handleSendNewMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chatSubmitButton invite\",\n        disabled: !friend,\n        onClick: handleInviteToGame,\n        children: \"Invite To Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatArea, \"uURiBUlBEzk5HiuVlhRP65/5RJc=\");\n\n_c = ChatArea;\nexport default ChatArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatArea\");","map":{"version":3,"sources":["C:/Users/liadg/Downloads/Chat-App-BackGammon-main/Chat-App-BackGammon-main/frontend/src/components/ChatArea/ChatArea.jsx"],"names":["React","useEffect","useState","useRef","FowardMessage","getMessages","sendNewMessage","auth","ChatArea","friend","handleSocketMessage","newMessageRecieved","inviteFriendToGame","messages","setMessages","currentUser","setCurrentUser","newMessage","setNewMessage","lastMessageRef","curUser","getCurrentUser","getMessagesAsync","id","_id","then","res","text","data","ex","console","log","handleSendNewMessage","e","preventDefault","trim","length","handleInviteToGame","map","msg","index","lastMessage","senderId","createdAt","target","value","event","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport  { FowardMessage } from '../Message/Message';\r\nimport \"./ChatArea.css\";\r\nimport { getMessages, sendNewMessage } from \"../../services/messageService\";\r\nimport auth from \"../../services/authService\";\r\n\r\nfunction ChatArea({ friend, handleSocketMessage, newMessageRecieved, inviteFriendToGame }) {\r\n    const [messages, setMessages] = useState([]);\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [newMessage, setNewMessage] = useState(\"\");\r\n    \r\n\r\n    const lastMessageRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const curUser = auth.getCurrentUser();\r\n        setCurrentUser(curUser);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setMessages([...messages, newMessageRecieved]);\r\n    }, [newMessageRecieved])\r\n\r\n\r\n    useEffect(() => {\r\n        const getMessagesAsync = async () => {\r\n            try {\r\n                await getMessages(currentUser.id, friend._id).then((res) => {\r\n                    setMessages([{ text: \"\" }, ...res.data]);\r\n                }\r\n                );\r\n            } catch (ex) {\r\n                console.log(\"failed\");\r\n            }\r\n\r\n        }\r\n        getMessagesAsync();\r\n    }, [friend])\r\n\r\n    const handleSendNewMessage = async (e) => {\r\n        e.preventDefault();\r\n        if (newMessage.trim().length > 0) {\r\n            try {\r\n                const { data } = await sendNewMessage(currentUser.id, friend._id, newMessage);\r\n                if (messages.length === 0) {\r\n                    setMessages(data);\r\n                }\r\n                else {\r\n                    setMessages([...messages, data]);\r\n                }\r\n                handleSocketMessage(friend._id, newMessage);\r\n                setNewMessage(\"\");\r\n            } catch (ex) {\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n    const handleInviteToGame = () => {\r\n        inviteFriendToGame(friend._id, currentUser.id);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chatBoxTop\">\r\n                {messages.length > 1 ? <div>\r\n                    {messages.map((msg, index) => {\r\n                        const lastMessage = messages.length - 1 === index\r\n                        return <FowardMessage text={msg?.text}\r\n                            own={msg?.senderId === currentUser.id}\r\n                            sentAt={msg?.createdAt}\r\n                            ref={lastMessage ? lastMessageRef : null} />\r\n                    })}</div> : <div>no messages</div>}\r\n\r\n\r\n\r\n            </div>\r\n\r\n            <div className=\"chatBoxBottom\">\r\n\r\n                <textarea className=\"chatMessageInput\" placeholder=\"Write somthing...\"\r\n                    onChange={(e) => setNewMessage(e.target.value)} value={newMessage}\r\n                    onKeyPress={(event) => event.key === \"Enter\" && handleSendNewMessage(event)}></textarea>\r\n                <button className=\"chatSubmitButton\" onClick={handleSendNewMessage}>Send</button>\r\n                <button className=\"chatSubmitButton invite\" disabled={!friend} onClick={handleInviteToGame}>Invite To Game</button>\r\n\r\n            </div>\r\n      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatArea\r\n"]},"metadata":{},"sourceType":"module"}