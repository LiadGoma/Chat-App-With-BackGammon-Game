{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liadg\\\\Downloads\\\\Chat-App-BackGammon-main\\\\Chat-App-BackGammon-main\\\\frontend\\\\src\\\\components\\\\gameComponents\\\\PiecesBox\\\\PiecesBox.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./PiecesBox.css\";\nimport React from 'react';\nimport { useDrop } from \"react-dnd\";\nimport gameService from \"../../../services/gameService\";\nimport GamePiece from \"../GamePiece/GamePiece\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PiecesBox(_ref) {\n  _s();\n\n  let {\n    pieces,\n    updateBox,\n    socket\n  } = _ref;\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: \"div\",\n    drop: item => {\n      addPieceToBox(item.id);\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  }));\n\n  const addPieceToBox = item => {\n    gameService.addPieceToBox(item);\n    socket.current.emit(\"addPieceToBox\", item, localStorage.getItem(\"roomName\"));\n    updateBox();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"piecesBox\",\n      ref: drop,\n      children: pieces && pieces.map(piece => {\n        return /*#__PURE__*/_jsxDEV(GamePiece, {\n          piece: piece\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PiecesBox, \"9166pYLrZ/JzF75YDim8ZjfICTM=\", false, function () {\n  return [useDrop];\n});\n\n_c = PiecesBox;\nexport default PiecesBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"PiecesBox\");","map":{"version":3,"sources":["C:/Users/liadg/Downloads/Chat-App-BackGammon-main/Chat-App-BackGammon-main/frontend/src/components/gameComponents/PiecesBox/PiecesBox.jsx"],"names":["React","useDrop","gameService","GamePiece","PiecesBox","pieces","updateBox","socket","isOver","drop","accept","item","addPieceToBox","id","collect","monitor","current","emit","localStorage","getItem","map","piece"],"mappings":";;;AAAA,OAAO,iBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAEA,SAASC,SAAT,OAAiD;AAAA;;AAAA,MAA9B;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,SAAV;AAAoBC,IAAAA;AAApB,GAA8B;AAE7C,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAaC,IAAb,IAAqBR,OAAO,CAAC,OAAO;AACtCS,IAAAA,MAAM,EAAE,KAD8B;AAEtCD,IAAAA,IAAI,EAAGE,IAAD,IAAU;AACZC,MAAAA,aAAa,CAACD,IAAI,CAACE,EAAN,CAAb;AACH,KAJqC;AAKtCC,IAAAA,OAAO,EAAGC,OAAD,KAAc;AACnBP,MAAAA,MAAM,EAAE,CAAC,CAACO,OAAO,CAACP,MAAR;AADS,KAAd;AAL6B,GAAP,CAAD,CAAlC;;AAUA,QAAMI,aAAa,GAAID,IAAD,IAAU;AAC5BT,IAAAA,WAAW,CAACU,aAAZ,CAA0BD,IAA1B;AACAJ,IAAAA,MAAM,CAACS,OAAP,CAAeC,IAAf,CAAoB,eAApB,EAAoCN,IAApC,EAA0CO,YAAY,CAACC,OAAb,CAAqB,UAArB,CAA1C;AACAb,IAAAA,SAAS;AACZ,GAJD;;AAMA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAEG,IAAhC;AAAA,gBAEKJ,MAAM,IAAIA,MAAM,CAACe,GAAP,CAAYC,KAAD,IAAW;AAC7B,4BAAO,QAAC,SAAD;AAAW,UAAA,KAAK,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFU;AAFf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GA7BQjB,S;UAEsBH,O;;;KAFtBG,S;AA+BT,eAAeA,SAAf","sourcesContent":["import \"./PiecesBox.css\"\r\nimport React from 'react'\r\nimport { useDrop } from \"react-dnd\";\r\nimport gameService from \"../../../services/gameService\";\r\nimport GamePiece from \"../GamePiece/GamePiece\";\r\n\r\nfunction PiecesBox({ pieces, updateBox,socket }) {\r\n\r\n    const [{ isOver }, drop] = useDrop(() => ({\r\n        accept: \"div\",\r\n        drop: (item) => {\r\n            addPieceToBox(item.id);\r\n        },\r\n        collect: (monitor) => ({\r\n            isOver: !!monitor.isOver(),\r\n        }),\r\n    }));\r\n\r\n    const addPieceToBox = (item) => {\r\n        gameService.addPieceToBox(item);\r\n        socket.current.emit(\"addPieceToBox\",item, localStorage.getItem(\"roomName\"));\r\n        updateBox();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"piecesBox\" ref={drop}>\r\n\r\n                {pieces && pieces.map((piece) => {\r\n                    return <GamePiece piece={piece} />\r\n                })}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PiecesBox\r\n"]},"metadata":{},"sourceType":"module"}