{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liadg\\\\Downloads\\\\Chat-App-BackGammon-main\\\\Chat-App-BackGammon-main\\\\frontend\\\\src\\\\components\\\\gameComponents\\\\GamePiece\\\\GamePiece.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./GamePiece.css\";\nimport React from 'react';\nimport { useDrag } from \"react-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GamePiece(_ref) {\n  _s();\n\n  let {\n    isMyTurn,\n    piece,\n    colorOfTheUser\n  } = _ref;\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    type: \"div\",\n    item: {\n      id: piece\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: colorOfTheUser === piece.color && isMyTurn ? drag : null,\n    className: `gamePiece ${piece.color}`,\n    style: {\n      visibility: isDragging ? \"hidden\" : \"visible\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GamePiece, \"wuumsFp4qAni9XRJfRhQAZjuD/k=\", false, function () {\n  return [useDrag];\n});\n\n_c = GamePiece;\nexport default GamePiece;\n\nvar _c;\n\n$RefreshReg$(_c, \"GamePiece\");","map":{"version":3,"sources":["C:/Users/liadg/Downloads/Chat-App-BackGammon-main/Chat-App-BackGammon-main/frontend/src/components/gameComponents/GamePiece/GamePiece.jsx"],"names":["React","useDrag","GamePiece","isMyTurn","piece","colorOfTheUser","isDragging","drag","type","item","id","collect","monitor","color","visibility"],"mappings":";;;AAAA,OAAO,iBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;;;AAEA,SAASC,SAAT,OAAuD;AAAA;;AAAA,MAApC;AAACC,IAAAA,QAAD;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAoC;AACnD,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAiBC,IAAjB,IAAyBN,OAAO,CAAC,OAAO;AAC1CO,IAAAA,IAAI,EAAE,KADoC;AAE1CC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,EAAE,EAAEN;AAAN,KAFoC;AAG1CO,IAAAA,OAAO,EAAGC,OAAD,KAAc;AAEnBN,MAAAA,UAAU,EAAE,CAAC,CAACM,OAAO,CAACN,UAAR;AAFK,KAAd;AAHiC,GAAP,CAAD,CAAtC;AAUA,sBACI;AACI,IAAA,GAAG,EAAED,cAAc,KAAKD,KAAK,CAACS,KAAzB,IAAiCV,QAAjC,GAA4CI,IAA5C,GAAmD,IAD5D;AAEI,IAAA,SAAS,EAAG,aAAYH,KAAK,CAACS,KAAM,EAFxC;AAGI,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAER,UAAU,GAAG,QAAH,GAAc;AAAtC;AAHX;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAnBQJ,S;UAC0BD,O;;;KAD1BC,S;AAqBT,eAAeA,SAAf","sourcesContent":["import \"./GamePiece.css\";\r\nimport React from 'react'\r\nimport { useDrag } from \"react-dnd\";\r\n\r\nfunction GamePiece({isMyTurn, piece, colorOfTheUser }) {\r\n    const [{ isDragging }, drag] = useDrag(() => ({\r\n        type: \"div\",\r\n        item: { id: piece },\r\n        collect: (monitor) => ({\r\n\r\n            isDragging: !!monitor.isDragging(),\r\n        }),\r\n    }));\r\n\r\n\r\n    return (\r\n        <div\r\n            ref={colorOfTheUser === piece.color &&isMyTurn ? drag : null}\r\n            className={`gamePiece ${piece.color}`}\r\n            style={{ visibility: isDragging ? \"hidden\" : \"visible\" }}>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GamePiece\r\n"]},"metadata":{},"sourceType":"module"}